#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Firebase dSym Upload (SPM installation)
summary: |
  Upload of dSym to Firebase Crashlytics with SPM installation
description: |
  This step will help you to upload dSym of your build to Firebase Crashlytics with SPM installation.
website: https://github.com/hughmaurer/bitrise-step-dsym-upload-to-crashlytics--no-cocoapods
source_code_url: https://github.com/hughmaurer/bitrise-step-dsym-upload-to-crashlytics--no-cocoapods
support_url: https://github.com/hughmaurer/bitrise-step-dsym-upload-to-crashlytics--no-cocoapods/issues

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic
#   - flutter

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

# These properties define whether a Step is run in a given Workflow or not.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#setting-conditions-for-running-the-step
#
is_always_run: false
is_skippable: false
run_if: ""

# Use the `deps` property to declare dependencies that you can fetch from an OS dependency manager.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#submodules-and-step-dependencies
#
# deps:
#   brew:
#   - name: cmake
#   apt_get:
#   - name: cmake


toolkit:
  bash:
    entry_file: step.sh


inputs:
  - google_plist_path:
    opts:
      title: "Location of your GoogleService info plist"
      description: | 
        The location is usually in the form ./YOUR-APP-NAME/GoogleService-Info.plist
      is_required: true
  - dsym_location: "$BITRISE_DSYM_PATH"
    opts: 
        title: "Location of the bitrise dSYMs"
        description: |
          This is the location of your dSYMs. Usually it is $BITRISE\_DSYM\_PATH
        summary:
          This is the location of your dSYMs that you want to upload to Firebase.
        is_expand: true
        is_required: true

outputs:
